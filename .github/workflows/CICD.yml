# name: CI/CD
# on:
#   push:
#     branches: [ "main" ]
#   workflow_dispatch:

jobs:
  clean:
    runs-on: self-hosted
    steps:
    - name: Clear all in runner folder
      run: |
        ls -la ./
        rm -rf ./* || true
        rm -rf ./.??* || true
        ls -la ./

  lint:
    runs-on: self-hosted
    needs: clean
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - run: |
        pip install --upgrade pip
        pip install pylint pylint_django
        pip install -r ./main/requirements.txt

    - name: Lint with pylint
      run: pylint --rcfile=setup.cfg $(find . -name "*.py" | xargs)
      continue-on-error: true

  test:
    runs-on: self-hosted
    needs: clean
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - run: |
        pip install --upgrade pip
        pip install pytest pytest-cov pytest-django
        pip install -r ./main/requirements.txt

    - name: Test with pytest
      run: pytest
    - run: pytest --cov-report term --cov-report xml:coverage.xml --cov=main

  build:
    runs-on: self-hosted
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - run: export PATH="$PATH:/main/"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ao-manage:latest
          context: .
          file: ./main/Dockerfile

  push:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Run command on remote server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            rm -rf /home
            git clone  /home
            cd /home
            docker rm -f main
            docker-compose build
            docker-compose pull main
            docker-compose up -d
            docker system prune -af