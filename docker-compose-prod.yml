version: '3.9'
# add replications and networks
services:

  nginx:
    image: nginx:1.25
    container_name: nginx
    volumes:
      - type: bind
        source: ./nginx/default.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
      - type: bind
        source: ./nginx/nginx.conf
        target: /etc/nginx/nginx.conf
        read_only: true
    restart: always
    depends_on: 
      - main
    ports:
      - 81:81
    deploy:
      resources:
        limits:
          cpus: '0.05'
          memory: 50M

  main:
    image: main
    build: "./main"
    container_name: main
    ports:
      - 8000:8000
    env_file: ./envs/.env.main-prod
    restart: always
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.9'
          memory: 400M

  front:
    image: front
    build:
      context: "./front"
      target: public
    container_name: front
    ports:
      - 80:80
    env_file: ./envs/.env.front-prod
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.05'
          memory: 50M

  db:
    image: postgres:16
    container_name: db
    ports:
      - 5432:5432
    env_file: ./envs/.env.db
    environment:
      POSTGRES_DB: "db"
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "root"
    volumes:
      - type: volume
        source: pgdata
        target: /var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '0.8'
          memory: 100M
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d db -U root" ]

volumes:
  pgdata: