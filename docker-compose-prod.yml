version: '3.9'

services:

  main:
    image: main
    build: "./main"
    container_name: main
    ports:
      - 8000:8000
    env_file:
      - ./envs/.env.main-prod
    environment:
      - ENVIRONMENT=PROD
      - DJANGO_SUPERUSER_PASSWORD=root
      - DJANGO_SUPERUSER_USERNAME=root
    depends_on:
      - db
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.20'
          memory: 400M
    networks:
      - db
      - nginx

  front-end:
    image: front-end
    build: "./front"
    container_name: front-end
    ports:
      - 80:80
    restart: always
    env_file:
      - ./envs/.env.front-prod
    environment:
      - ENVIRONMENT=PROD
    depends_on:
      - main
    deploy:
      resources:
        limits:
          cpus: '0.30'
          memory: 100M
    networks:
      - nginx

  nginx:
    image: nginx:1.23.2-alpine
    container_name: nginx
    volumes:
      - type: bind
        source: ./nginx
        target: /etc/nginx/conf.d
        read_only: true
    depends_on:
      - main
    ports:
      - 81:81
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: 100M
    networks:
      - nginx

  db:
    image: postgres:13.3
    container_name: db
    ports:
      - 5432:5432
    env_file:
      - ./envs/.env.db
    environment:
      POSTGRES_DB: "db"
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "root"
    volumes:
      - type: volume
        source: pgdata
        target: /var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '0.40'
          memory: 200M
    networks:
      - db

volumes:
  pgdata:

networks:
  db:
    driver: bridge
  nginx:
    driver: bridge
